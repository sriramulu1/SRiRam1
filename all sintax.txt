 1. what are the lines of code to launch the browser 

     System.setProperty("webdriver.chrome.driver","C:\\chromedriver_win32\\chromedriver.exe");
     driver =new ChromeDriver();
     driver.manage().window().maximize() ;	
     driver.get("https://opensource-demo.orangehrmlive.com/");
	  
 2. how to inspect web element 

  findElement(By.name("txtUsername")).sendKeys("Admin");
  findElement(By.name("txtPassword")).sendKeys("admin123");
  findElement(By.id("btnLogin")).click();
----------------------------------------------------------------------------------------		 

 3.LOCATORS 

    there are 8 types of locators
   1.id
   2.name
   3.css selectors
   4.xpath
   5.link test ( if our hyperlink is static then it is link test) 

   6.partial link test (if our hyper link is dynamic then it is partial link test) 

   7.classname
   8. tag name 

              List<WebElement> links1=  driver.findElements(By.tagName("a"));	
              int links_count= links1.size();
              System.out.println("Number of hyperlinks on LoginPage : "+links_count);
		
-----------------------------------------------------------------------------------------------------

 4.how to handle dropdowns

        Select dropdown1 = new Select(findElement(By.id("location_country")));

        dropdown1.selectByVisibleText(CountryName1);
        dropdown1.selectByValue(IN);
        dropdown1.selectByindex();

   how can be able to print all droupdown values and what it contains 

              list<webelements>options=dropdown.getoptions();   

               for (webElements elements:elements)
               { 
               system.out.println(elements.getText());

      
---------------------------------------------------------------------------------------------------------

      **Data provide**





  1. data provider  sintax
    
    ***first oproach syntax--but it is not used.

public static Object[][] Test1() throws Exception {
	 
	        return new Object[][] { 
	        	{ "https://opensource-demo.orangehrmlive.com/","Admin", "admin123","Sales12","Sales12 descr","Sales12 Note" },
	        	{"https://opensource-demo.orangehrmlive.com/","Admin", "admin123","Sales13","Sales13 descr","Sales13 Note" },
	        	{"https://opensource-demo.orangehrmlive.com/","Admin", "admin123","Sales14","Sales14 descr","Sales14 Note" }
	        	};
	  }
	 
    ***2ND OPROACH IS PERFORED(USED IN REAL TIME)

 public Object[] myDataProvider() {
	      
	     Object data[][]=  new Object[3][6];
	     
	     // First student details
	     data[0][0]= "https://opensource-demo.orangehrmlive.com/"; 
	     data[0][1]= "Admin";
	     data[0][2]= "admin123";
	     data[0][3]= "Sales15";
	     data[0][4]= "Sales15 descr";
	     data[0][5]= "Sales15 Note";
	      
	     // Second student details
	     data[1][0]= "https://opensource-demo.orangehrmlive.com/"; 
	     data[1][1]= "Admin";
	     data[1][2]= "admin123";
	     data[1][3]= "Sales16";
	     data[1][4]= "Sales16 descr";
	     data[1][5]= "Sales16 Note";
	     
	     // Second student details
	     data[2][0]= "https://opensource-demo.orangehrmlive.com/"; 
	     data[2][1]= "Admin";
	     data[2][2]= "admin123";
	     data[2][3]= "Sales17";
	     data[2][4]= "Sales17 descr";
	     data[2][5]= "Sales17 Note";
	     
	     return data;  
	 }


DATA MAINTAINACE IN THE EXCEL SHEET sintax

       @DataProvider(name = "TC01_Add_Nationality")
	public static Object[][] Authentication1() throws Exception {
     
                ExcelApiTest4 eat = new ExcelApiTest4();
		Object[][] testObjArray = eat.getTableArray("C:\\HTML Report\\HTML Report\\OrangeHRM6\\TC01_Locations.xlsx","Sheet4");
		System.out.println(testObjArray.length);
		return (testObjArray);
	}



commom steps for every data provider concepts(ie.,step2 &step3)

step_2
     
        @Test(dataProvider="TC01_Add_Nationality")
step_3
	public void Login_Test(String Browser,String TestURL,String UserName,String Password,String Name,String Country) throws Exception
	{



6.what is the sintax for maintaining data in excel sheet 
                ExcelApiTest4 eat = new ExcelApiTest4();
		Object[][] testObjArray = eat.getTableArray("C:\\HTML Report\\HTML Report\\OrangeHRM6\\TC01_Locations.xlsx","Sheet4");
		System.out.println(testObjArray.length);
		return (testObjArray);
	}
 

BELOW @TEST WE HAVE USE IF CONDITIONS(FOR DIFFERENT BROWSERS(FIREFOX,IE,CHROME IN Excel sheet)  
                                      if(Browser.equalsIgnoreCase("Chrome"))
					{
						 driver=TestBrowser.OpenChromeBrowser();
						
						//driver=driver1;
					 	
				         }

					if(Browser.equalsIgnoreCase("FireFox"))
					{
							driver = TestBrowser.FirefoxBrowser();
							//driver=driver2;
							Thread.sleep(10000);
					}
					
					
					if(Browser.equalsIgnoreCase("IE"))
					{
							driver = TestBrowser.OpenIEBrowser();
							Thread.sleep(10000);
			
		}
			

--------------------------------------------------------------------------------------------------------------------		
   TestNG parameteriation
                  
if we want to maintain your data in testNG.xml we have to declare globally
@Parameters({"Browser1","UserName1","Password1","Nationality1"}) 
if conditions also(as shown above)

in testNG.xml we have to write

<parameter name="Browser1" value="Chrome"/> 
  <parameter name="UserName1" value="Admin"/> 
  <parameter name="Password1" value="admin123"/> 
  <parameter name="Nationality1" value="Indian861"/>
---------------------------------------------------------------------------------------
    WAITS
           implicity waits

 driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

              Explicit waits

 WebDriverWait wait=  new WebDriverWait(driver,60);
wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Logout"))) ;
--------------------------------------------------------------------------------------------				 
                                  frames

 1st way 

Switch into Frame by Name
driver.switchTo().frame("Google_ContactForm");

 TO GET BACK FROM CURRENT FRAME
driver.switchTo().defaultContent();

TO CLEAR THE PRIVIOUS DATA
findElement(By.name("lastname")).clear();
findElement(By.name("lastname")).sendKeys("Selenium Trainer");

 2nd way

Switch into Frame by webElement
driver.switchTo().frame(driver.findElement(By.id("GoogleContactForm")));

 3rd way
Switch into Frame based on index

to known how many iframes located in an application
	List<WebElement> frames = driver.findElements(By.tagName("iframe"));
	System.out.println("Numnber of frames: " + frames.size());
	
	int count=frames.size();
	
	sintax	
	driver.switchTo().frame(frames.get(0));

-----------------------------------------------------------------------------------------------
         JavascriptExecutor
JavascriptExecutor can be performed in 5 ways
1.launch into a new tab

MULTIPULE WINDOWS
(JavascriptExecutor)driver.executeScript(windows.get());

ArrayList<String> tabs = new ArrayList<String>(driver.getWindowHandles())
driver.switchTo().window(tabs.get(0));

2. if sendkeys operation  is not performing
3. if click operation is not performing 
4.highligthing the webwlement borders
5.scorllinto view 

     
 JavascriptExecutor js = (JavascriptExecutor)driver;	
        
        WebElement username=driver.findElement(By.id("txtUsername"))
        WebElement password=driver.findElement(By.name("txtPassword"));
        WebElement loginbutton =driver.findElement(By.id("btnLogin"));

        highligthing the webwlement borders
        js.executeScript("arguments[0].style.border='3px solid red'", username);
        js.executeScript("arguments[0].style.border='3px solid blue'", password);
        js.executeScript("arguments[0].style.border='3px solid green'", loginbutton);
       
       
       for sendkeys
        js.executeScript("arguments[0].setAttribute('value','Admin')", username);
        js.executeScript("arguments[0].setAttribute('value','admin123')", password);
       for click 
        js.executeScript("arguments[0].click();", loginbutton);
  ---------------------------------------------------------------------------------      
                 Actions
  
1.moveToElement(Mouse menu)	
Actions actions = new Actions(driver);
	
	 actions.moveToElement(Admin).
	 moveToElement(User_Management).
	 moveToElement(Users).click().build().perform();    

2.DoubleClick
Actions actions = new Actions(driver);
	WebElement Copy_Text_Button=findElement(By.xpath("//*[@id='HTML10']/div[1]/button"));
	actions.doubleClick(Copy_Text_Button).perform();

3.rigth click
Actions actions = new Actions(driver);

        WebElement RButton=findElement(By.xpath("//span[text()='right click me']"));
	
	actions.contextClick(RButton).perform();

4.DragAndDrop
WebElement Source_Drag_Button=findElement(By.xpath("//*[@id='draggable']"));
	WebElement Target_Drag_Button=findElement(By.xpath("//*[@id='droppable']"));
	
	Actions actions = new Actions(driver);
	
	actions.dragAndDrop(Source_Drag_Button, Target_Drag_Button).perform();
---------------------------------------------------------------------------------------------------------
	   Alerts 

 Alert alert = driver.switchTo().alert();
    
    Thread.sleep(1000);
    
    alert.accept();( for ok)
    //alert.dismiss();( for cancel)

// Capturing alert message.    
        String alertMessage= alert.getText();		
        		
        // Displaying alert message		
        System.out.println("ALERT DISPLAYED as : "+alertMessage);	
        Thread.sleep(5000);
        		
        // Accepting alert		
        alert.accept();		
-----------------------------------------------------------------------------------------------------------



